
services:
  clientDb:
    image: postgres:latest
    container_name: clientDb
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: root
      POSTGRES_DB: client_db
    ports:
      - "5432:5432"
    volumes:
      - client_data:/var/lib/postgresql/data
    networks:
      - net-microservice
    restart: unless-stopped

  keyCloackDb:
    image: postgres:latest
    container_name: keycloackDb
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: keycloak_db
    ports:
      - "5440:5432"
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    networks:
      - net-microservice
    restart: always


  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      KC_HOSTNAME: localhost
      KC_DB: postgres
      KC_DB_URL: "jdbc:postgresql://keyCloackDb:5432/keycloak_db"
      KC_DB_USERNAME: root
      KC_DB_PASSWORD: postgres
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: info
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7080/health/ready"]
      interval: 15s
      timeout: 2s
      retries: 15
    command: ["start-dev", "--http-port", "7080", "--https-port", "7443"]
    ports:
      - "7080:7080"
      - "7443:7443"
    networks:
      - net-microservice
    depends_on:
      - keyCloackDb
    restart: always



  productDb:
    image: postgres:latest
    container_name: productDb
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: root
      POSTGRES_DB: product_db
    ports:
      - "5433:5432"
    volumes:
      - product_data:/var/lib/postgresql/data
    networks:
      - net-microservice
    restart: unless-stopped

  orderDb:
    image: postgres:latest
    container_name: orderDb
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: root
      POSTGRES_DB: order_db
    ports:
      - "5434:5432"
    volumes:
      - order_data:/var/lib/postgresql/data
    networks:
      - net-microservice
    restart: unless-stopped







  paymentDb:
    image: postgres:latest
    container_name: paymentDb
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: root
      POSTGRES_DB: payment_db
    ports:
      - "5435:5432"
    volumes:
      - payment_data:/var/lib/postgresql/data
    networks:
      - net-microservice
    restart: unless-stopped

  photoDb:
    image: postgres:latest
    container_name: photoDb
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: root
      POSTGRES_DB: photo_db
    ports:
      - "5438:5432"
    volumes:
      - photo_data:/var/lib/postgresql/data
    networks:
      - net-microservice
    restart: unless-stopped


  notificationDb:
    image: postgres:latest
    container_name: notificationDb
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: root
      POSTGRES_DB: notification_db
    ports:
      - "5437:5432"
    volumes:
      - notification_data:/var/lib/postgresql/data
    networks:
      - net-microservice
    restart: unless-stopped






  commentDb:
    image: postgres:latest
    container_name: commentDb
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: root
      POSTGRES_DB: comment_db
    ports:
      - "5439:5432"
    volumes:
      - comment_data:/var/lib/postgresql/data
    networks:
      - net-microservice
    restart: unless-stopped



  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - net-microservice
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms_kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - net-microservice






networks:
  net-microservice:
    driver: bridge

volumes:
  client_data:
  product_data:
  order_data:
  payment_data:
  photo_data:
  notification_data:
  comment_data:
  keycloak-db-data: